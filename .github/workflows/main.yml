name: Compile and Deploy Verbali

on:
  push:
    paths:
      - '**/verbali/interni/*.typ'  # Watch for .typ files in interni folders
      - '**/verbali/esterni/*.typ'  # Watch for .typ files in esterni folders

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # --- Step 1: Checkout docs repo ---
      - name: Checkout Docs Repo
        uses: actions/checkout@v4

      # --- Step 2: Install Typst CLI ---
      - name: Install Typst
        run: |
          # Download and install Typst
          curl -L https://github.com/typst/typst/releases/download/v0.11.0/typst-x86_64-unknown-linux-musl.tar.xz | tar xJ
          echo "$(pwd)/typst-x86_64-unknown-linux-musl" >> $GITHUB_PATH

      # --- Step 3: Compile PDFs ---
      - name: Compile PDFs
        run: |
          # Find all .typ files in interni/esterni folders
          find . -type f \( -path '*/verbali/interni/*.typ' -o -path '*/verbali/esterni/*.typ' \) | while read typ_file; do
            
            # Extract project name (e.g., "1-candidatura" from the path)
            project_folder=$(echo "$typ_file" | cut -d'/' -f2)  # e.g., "1-candidatura"
            
            # Determine verbale type (interno/esterno)
            if [[ "$typ_file" == *"/interni/"* ]]; then
              verbale_type="interno"
              filename_prefix="vi"
            else
              verbale_type="esterno"
              filename_prefix="ve"
            fi

            # Extract date from filename (e.g., "vi_20241203_1.0.0.typ" â†’ "20241203")
            base_name=$(basename "$typ_file" .typ)
            date_part=$(echo "$base_name" | cut -d'_' -f2)
            
            # Compile to PDF with clean name (e.g., "vi_20241203.pdf")
            pdf_name="${filename_prefix}_${date_part}.pdf"
            
            # Target directory in the site repo
            target_dir="compiled_pdfs/verbali/$project_folder/$verbale_type"
            mkdir -p "$target_dir"
            
            # Compile the Typst file
            typst compile "$typ_file" "$target_dir/$pdf_name"
          done

      # --- Step 4: Deploy to Site Repo ---
      - name: Push to Site Repo
        env:
          GITHUB_TOKEN: ${{ secrets.SITE_REPO_TOKEN }}  # PAT with repo access
        run: |
          # Clone the site repo
          git clone "https://oauth2:$GITHUB_TOKEN@github.com/your-username/your-site-repo.git"
          cd your-site-repo
          
          # Copy compiled PDFs to the site repo
          mkdir -p verbali
          cp -r ../compiled_pdfs/verbali/* verbali/
          
          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update verbali: $(date +'%Y-%m-%d')"
          git push origin main
